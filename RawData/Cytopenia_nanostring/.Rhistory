my_fruit <- apple
my_fruit <- "apple"
paste("my fav fruit is", my_fruit)
"my fav fruit is", my_fruit
"my fav fruit is" + my_fruit
paste("my fav fruit is", my_fruit, sep = '')
paste("my fav fruit is", my_fruit, sep = ' ')
pow <- function(num1, num2) {
value <- num1 ^ num2
paste(num1, "raised to the power", num2, "is", value)
}
pow(8, 2)
check <- function(x) {
if x > 0 {
return("Positive")
}
if x < 0 {
return("Negative")
}
else {return("Zero")}
}
check(11)
check <- function(x) {
if x > 0 {
return("Positive")
}
if x < 0 {
return("Negative")
}
else {return("Zero")}
}
check <- function(x) {
if (x > 0) {
return("Positive")
}
if (x < 0) {
return("Negative")
}
else {return("Zero")}
}
check(11)
check(-11)
check(0)
search()
library(EnhancedVolcano)
help("EnhancedVolcano")
search()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
search()
library(DropletUtils)
library(scran)
library(scater)
library(Seurat)
library(DoubletFinder)
library(modes)
library(SingleR)
library(URD)
library(knitr)
library(dplyr)
library(Matrix)
library(limma)
library(GSEABase)
library(genefilter)
library(AnnotationDbi)
library(org.Mm.eg.db)
library(org.Hs.eg.db)
library(gplots)
library(gdata)
library(RColorBrewer)
library(scales)
library(reshape2)
library(ggplot2)
library(VennDiagram)
library(tools)
library(grid)
library(gridBase)
library(gridExtra)
library(FRObjects)
library(h5FRObjects)
library(parallel)
library(phantasus)
?as.SingleCellExperiment
?nexprs
p_ABCB1_ABCG2_bar <- ggbarplot(ABCB1_ABCG2_limma_voom_all, x = "gene", y = "limma_normalized_counts", fill = "sample",
palette = "jco", add = "mean_sd", add.params = list(group = "sample"),
position = position_dodge(0.8))
library("ggpubr")
p_ABCB1_ABCG2_bar <- ggbarplot(ABCB1_ABCG2_limma_voom_all, x = "gene", y = "limma_normalized_counts", fill = "sample",
palette = "jco", add = "mean_sd", add.params = list(group = "sample"),
position = position_dodge(0.8))
#############Read in data#######
ABCB1_ABCG2_limma_voom_all <- read.csv("~/Desktop/active_projects/ccbr1014/ABCB1_ABCG2_limma_voom_all.csv")
setwd("~/Desktop/active_projects/SingleCell_heart_neuron")
#load each h5 seperately. Make sure to use '', not  "" for file path
neuron <- Read10X_h5(filename='/Users/yind3/Desktop/active_projects/SingleCell_heart_neuron/neuron.h5')
search()
library(DropletUtils)
library(scran)
library(scater)
library(Seurat)
library(DoubletFinder)
library(modes)
library(SingleR)
library(URD)
library(knitr)
library(dplyr)
library(Matrix)
library(limma)
library(GSEABase)
library(genefilter)
library(AnnotationDbi)
library(org.Mm.eg.db)
library(org.Hs.eg.db)
library(gplots)
library(gdata)
library(RColorBrewer)
library(scales)
library(reshape2)
library(ggplot2)
library(VennDiagram)
library(tools)
library(grid)
library(gridBase)
library(gridExtra)
library(FRObjects)
library(h5FRObjects)
library(parallel)
library(phantasus)
library(SummarizedExperiment)
library(destiny)
library("URD")
library(SingleR)
library(hdf5r)
#load each h5 seperately. Make sure to use '', not  "" for file path
neuron <- Read10X_h5(filename='/Users/yind3/Desktop/active_projects/SingleCell_heart_neuron/neuron.h5')
head(neuron_so@meta.data, 5)
neuron_so <- CreateSeuratObject(counts = neuron)
head(neuron_so@meta.data, 5)
neuron_so[["percent.mt"]] <- PercentageFeatureSet(neuron_so, pattern = "^MT-")
#All cells have the same value of percent.mt.
VlnPlot(neuron_so, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
plot3 <- FeatureScatter(neuron_so, feature1 = "Mrpl15", feature2 = "Lypla1")
plot3
plot1 <- FeatureScatter(neuron_so, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(neuron_so, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1
plot2
CombinePlots(plots = list(plot1, plot2))
plot2
?CreateSeuratObject
?lapply
lapply(list, function)
tolower
?tolower
name <- DA
name <- 'DA'
tolower(name)
movies <- c("SPYDERMAN","BATMAN","VERTIGO","CHINATOWN")
movies_lower <- lapply(movies, tolower)
movies_lower
unlist()
?unlist
movies
class(movies)
type(movies)
class(movies_lower)
movies_lower <-unlist(lapply(movies,tolower))
movies_lower
class(movies_lower)
setwd("~/Desktop/active_projects/SingleCell_heart_neuron")
search()
?list.files
list.files()
getwd()
h5_files <- list.files(path = "/Users/yind3/Desktop/active_projects/SingleCell_heart_neuron", pattern = "*.h5", full.names = T)
obj.list < sapply(h5_files, Read10X_h5)
obj.list <- sapply(h5_files, Read10X_h5)
obj.list
class(obj.list)
so <- CreateSeuratObject(counts = obj.list)
class(neuron)
obj.list <- lapply(h5_files, Read10X_h5)
obj.list
class(obj.list)
so <- CreateSeuratObject(counts = obj.list)
obj.list[[1]]
obj.list[[2]]
obj.list[[3]]
class(obj.list[[1]])
obj.list[1]
addition <- function(a, b) {
return a + b
}
addition <- function(a, b) {
return (a + b)
}
addition(2, 5)
convert <- function(minutes) {}
convert <- function(minutes) {}
convert <- function(minutes) {return(minutes*60)}
convert(5)
convert(2)
setwd("~/Desktop/active_projects/ccbr1022/Cytopenia_nanostring")
git clone https://github.com/KevinMenden/nanoR.git
git clone https://github.com/KevinMenden/nanoR.git
install.packages("nanoR/",repos=NULL,type="source")
git clone https://github.com/KevinMenden/nanoR.git
# Install NACHO from CRAN:
install.packages("NACHO")
