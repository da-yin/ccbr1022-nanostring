my_sig_degs[["SH1_0pt5mM-SCR_0pt5mM"]]
my_degs$`SH1_0pt5mM-SCR_0pt5mM`
my_degs$`SH1_0pt5mM-SCR_0pt5mM`$gene
my_sig_degs[["SH1_0pt5mM-SCR_0pt5mM"]]
my_sig_degs[["SH1_0pt5mM-SCR_0pt5mM"]]
my_sig_degs[["SH1_0pt5mM-SCR_0pt5mM"]]$ensid_gene
my_degs[["SH1_0pt5mM-SCR_0pt5mM"]]
bpSH1test = enrichGO(gene = my_sig_degs[["SH1_0pt5mM-SCR_0pt5mM"]]$ensid_gene, universe = my_degs[["SH1_0pt5mM-SCR_0pt5mM"]]$ensid_gene, OrgDb = org.Mm.eg.db,keyType='ENSEMBL', ont = "BP", pAdjustMethod = "BH", pvalueCutoff = 0.01, qvalueCutoff = 0.05,readable = TRUE)
my_sig_degs[["SCR_4mM-SCR_0pt5mM"]]
my_sig_degs[["SCR_4mM-SCR_0pt5mM"]]
setwd("~/Desktop/active_projects/ccbr1016-Surajit-Sinha/pipeliner_limma/DEG/")
geneinfo = read.table("~/Desktop/active_projects/ccbrFiles/geneinfo.bed")
geneinfo$V5 = gsub('\\..*','', geneinfo$V5)
my_files <- list.files(path="~/Desktop/active_projects/ccbr1016-Surajit-Sinha/pipeliner_limma/DEG/input_files")
my_degs <- list()
for (i in my_files){
my_degs[[i]] <- read.table(i,header = TRUE,sep='\t')
my_degs[[i]]$ensid_gene <- gsub('\\..*','', my_degs[[i]]$ensid_gene)
}
names(my_degs) <- stringr::str_replace(my_files, pattern = "_all_genes.txt", replacement = "") %>%
stringr::str_replace(pattern = "limma_DEG_", replacement = "")
my_sig_degs = lapply(my_degs, function(x) subset(x, fdr < 0.05 & abs(fc) > 1.5))
my_degs_rankingScoresList <- lapply(my_degs, function(x){
scores <- x$gsea_ranking_score
names(scores) <- as.character(x$ensid_gene)
scores <- sort(scores, decreasing = T)
})
suppressMessages(library(biomaRt))
suppressMessages(library(biomaRt))
View(Entrez_all)
View(Entrez_from_symbol)
knitr::opts_chunk$set(echo = TRUE)
model1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)  # data manipulation and visualization
library(modelr)     # provides easy pipeline modeling functions
library(broom)      # helps to tidy up model outputs
library("PerformanceAnalytics")
library("Hmisc")
# ++++++++++++++++++++++++++++
# flattenCorrMatrix
# ++++++++++++++++++++++++++++
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
setwd("~/Desktop/active_projects/ml/advertising_lm")
advertising = read.csv("Advertising.csv")%>% select(-X)
head(advertising)
setwd("~/Desktop/active_projects/ml/advertising_lm")
advertising = read.csv("Advertising.csv")%>% select(-X)
res = rcorr(as.matrix(advertising))
flattenCorrMatrix(res$r, res$P)
chart.Correlation(advertising, histogram=TRUE, pch=19)
set.seed(123)
sample <- sample(c(TRUE, FALSE), nrow(advertising), replace = T, prob = c(0.6,0.4))
train <- advertising[sample, ]
test <- advertising[!sample, ]
model1 <- lm(sales ~ TV, data = train)
summary(model1)
model1
model1
model1_results <- augment(model1, train)
model1_results
?augment
model1_results <- augment(model1, train)
ggplot(model1_results, aes(.fitted, .resid)) +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Residuals vs Fitted")
knitr::opts_chunk$set(echo = TRUE)
# Grab args
DIR <- "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/"
FILE1 <- "~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH1_0pt5mM-SCR_0pt5mM_1_2/sampletable.txt"
FILE2 <- "~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH1_0pt5mM-SCR_0pt5mM_1_2/RawCountFile_RSEM_genes_filtered.txt"
CONTRASTS <- "SH1_0pt5mM SCR_0pt5mM"
# Read in files
sampleinfo=read.delim(FILE1)
x = read.delim(FILE2,row.names=1)
colnames(x)=as.character(sampleinfo[,4])
myconditions = as.factor(sampleinfo$condition)
dge_before = DGEList(counts=x,group=myconditions)
suppressMessages(library(rgl))
suppressMessages(library(knitr))
suppressMessages(library('edgeR'))
suppressMessages(library('statmod'))
suppressMessages(library('RColorBrewer'))
suppressMessages(library(gplots))
suppressMessages(library('reshape'))
suppressMessages(library('ggplot2'))
suppressMessages(library('limma'))
suppressMessages(library('geneplotter'))
suppressMessages(library('ggfortify'))
suppressMessages(library(amap))
# Read in files
sampleinfo=read.delim(FILE1)
x = read.delim(FILE2,row.names=1)
colnames(x)=as.character(sampleinfo[,4])
myconditions = as.factor(sampleinfo$condition)
dge_before = DGEList(counts=x,group=myconditions)
dge_before <- calcNormFactors(dge_before,method="TMM")
Group <- factor(sampleinfo$condition)
design=model.matrix(~0+Group)
contras=unlist(strsplit(CONTRASTS, split=" "))
cat(contras,"\t",length(contras),"\t",contras[1],"\t",contras[2],"\n",file="readcontralimma.txt")
cons=c()
for(i in seq(1, length(contras), by = 2))
{{
cons=c(cons,paste(contras[i],"-",contras[i+1],sep=""))
}}
png("results/limma_voom_meanVariance_Plot.png")
v1 <- voom(as.matrix(x),design,plot=TRUE,normalize="quantile")
dev.off()
dge_before <- estimateCommonDisp(dge_before)
dge_before <- estimateTagwiseDisp(dge_before)
rawlog2= cpm(dge_before,log=TRUE,normalized.lib.sizes=FALSE,prior.count=0.5)
sf = v1$E/log2((x/colSums(x))*1000000)
rn=rownames(v1$E)
ensID=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[2])
mydata=cbind(ensID,gene,v1$E)
sf=cbind(ensID,gene,sf)
write.table(sf,file="processedData/limma_voom_scaling_factors.txt",row.names=TRUE,col.names=NA,sep="\t",quote=FALSE)
write.table(mydata,file="processedData/limma_voom_normalized_data.txt",row.names=TRUE,col.names=NA,sep="\t",quote=FALSE)
#png("HistlimmavoomNormFilter.png")
df.n <- melt(as.data.frame(v1$E))
#print(ggplot(df.n) + geom_density(aes(x = value,colour = variable)) + labs(x = NULL) + theme(legend.position='right') + ggtitle("Normalized Counts"))
# dev.off()
limmahist <- ggplotly(ggplot(df.n) + geom_line(stat="density", aes(x = value,colour = variable)) + labs(x = NULL) + theme(legend.position='right') + scale_x_log10() + theme_bw())
sf = v1$E/log2((x/colSums(x))*1000000)
rn=rownames(v1$E)
ensID=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[2])
mydata=cbind(ensID,gene,v1$E)
sf=cbind(ensID,gene,sf)
write.table(sf,file="processedData/limma_voom_scaling_factors.txt",row.names=TRUE,col.names=NA,sep="\t",quote=FALSE)
write.table(mydata,file="processedData/limma_voom_normalized_data.txt",row.names=TRUE,col.names=NA,sep="\t",quote=FALSE)
# Differntially expressed genes
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
final
# Differntially expressed genes
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
# MAplot
dataf=data.frame("m"=all.genes.con$AveExpr,"fc"=all.genes.con$logFC,"sig"=all.genes.con$adj.P.Val<0.05)
png(paste(cons[i],"_MAplot_limma_v2.png",sep=""))
plotMA(dataf,log="",main=cons[i],ylim=range(all.genes.con$logFC))
dev.off()
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),sep="\t",col.names=NA)
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
limmaout=limmaout[,which(names(limmaout) %in% c("X","gene","logFC","P.Value"))]
limmaout$fc=2^limmaout$logFC
down_reg=limmaout$logFC<0
limmaout$fc[down_reg]=-1/limmaout$fc[down_reg]
limmaout=limmaout[,c("X","gene","fc","logFC","P.Value")]
colnames(limmaout)=c("ensid_gene","gene","fc","log2fc","pvalue")
limmaout$fdr=p.adjust(limmaout$pvalue,method='fdr',n=length(limmaout$pvalue))
limmaout$gsea_ranking_score=-log10(limmaout$pvalue)*sign(limmaout$log2fc)
write.table(limmaout,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
# Grab args
DIR <- "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/"
FILE1 <- "~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH1_0pt5mM-SCR_0pt5mM_1_2/sampletable.txt"
FILE2 <- "~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH1_0pt5mM-SCR_0pt5mM_1_2/RawCountFile_RSEM_genes_filtered.txt"
CONTRASTS <- "SH1_0pt5mM SCR_0pt5mM"
# Read in files
sampleinfo=read.delim(FILE1)
x = read.delim(FILE2,row.names=1)
colnames(x)=as.character(sampleinfo[,4])
myconditions = as.factor(sampleinfo$condition)
dge_before = DGEList(counts=x,group=myconditions)
dge_before <- calcNormFactors(dge_before,method="TMM")
Group <- factor(sampleinfo$condition)
design=model.matrix(~0+Group)
contras=unlist(strsplit(CONTRASTS, split=" "))
cat(contras,"\t",length(contras),"\t",contras[1],"\t",contras[2],"\n",file="readcontralimma.txt")
cons=c()
for(i in seq(1, length(contras), by = 2))
{{
cons=c(cons,paste(contras[i],"-",contras[i+1],sep=""))
}}
png("results/limma_voom_meanVariance_Plot.png")
v1 <- voom(as.matrix(x),design,plot=TRUE,normalize="quantile")
dev.off()
dge_before <- estimateCommonDisp(dge_before)
dge_before <- estimateTagwiseDisp(dge_before)
rawlog2= cpm(dge_before,log=TRUE,normalized.lib.sizes=FALSE,prior.count=0.5)
sf = v1$E/log2((x/colSums(x))*1000000)
rn=rownames(v1$E)
ensID=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[2])
mydata=cbind(ensID,gene,v1$E)
sf=cbind(ensID,gene,sf)
write.table(sf,file="processedData/limma_voom_scaling_factors.txt",row.names=TRUE,col.names=NA,sep="\t",quote=FALSE)
write.table(mydata,file="processedData/limma_voom_normalized_data.txt",row.names=TRUE,col.names=NA,sep="\t",quote=FALSE)
# Differntially expressed genes
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
# MAplot
dataf=data.frame("m"=all.genes.con$AveExpr,"fc"=all.genes.con$logFC,"sig"=all.genes.con$adj.P.Val<0.05)
png(paste(cons[i],"_MAplot_limma_v2.png",sep=""))
plotMA(dataf,log="",main=cons[i],ylim=range(all.genes.con$logFC))
dev.off()
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("/processedData/DEG",paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), sep="/"),
sep="\t",col.names=NA)
# Differntially expressed genes
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
# MAplot
dataf=data.frame("m"=all.genes.con$AveExpr,"fc"=all.genes.con$logFC,"sig"=all.genes.con$adj.P.Val<0.05)
png(paste(cons[i],"_MAplot_limma_v2.png",sep=""))
plotMA(dataf,log="",main=cons[i],ylim=range(all.genes.con$logFC))
dev.off()
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),
sep="\t",col.names=NA)
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
limmaout=limmaout[,which(names(limmaout) %in% c("X","gene","logFC","P.Value"))]
limmaout$fc=2^limmaout$logFC
down_reg=limmaout$logFC<0
limmaout$fc[down_reg]=-1/limmaout$fc[down_reg]
limmaout=limmaout[,c("X","gene","fc","logFC","P.Value")]
colnames(limmaout)=c("ensid_gene","gene","fc","log2fc","pvalue")
limmaout$fdr=p.adjust(limmaout$pvalue,method='fdr',n=length(limmaout$pvalue))
limmaout$gsea_ranking_score=-log10(limmaout$pvalue)*sign(limmaout$log2fc)
write.table(limmaout,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
file.rename(from = DIR, to = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/")
# Differntially expressed genes
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
# MAplot
dataf=data.frame("m"=all.genes.con$AveExpr,"fc"=all.genes.con$logFC,"sig"=all.genes.con$adj.P.Val<0.05)
png(paste(cons[i],"_MAplot_limma_v2.png",sep=""))
plotMA(dataf,log="",main=cons[i],ylim=range(all.genes.con$logFC))
dev.off()
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),
sep="\t",col.names=NA)
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
limmaout=limmaout[,which(names(limmaout) %in% c("X","gene","logFC","P.Value"))]
limmaout$fc=2^limmaout$logFC
down_reg=limmaout$logFC<0
limmaout$fc[down_reg]=-1/limmaout$fc[down_reg]
limmaout=limmaout[,c("X","gene","fc","logFC","P.Value")]
colnames(limmaout)=c("ensid_gene","gene","fc","log2fc","pvalue")
limmaout$fdr=p.adjust(limmaout$pvalue,method='fdr',n=length(limmaout$pvalue))
limmaout$gsea_ranking_score=-log10(limmaout$pvalue)*sign(limmaout$log2fc)
write.table(limmaout,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
file.rename(from = paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), to = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/")
install.packages(filesstrings)
install.packages("filesstrings")
suppressMessages(library(filesstrings))
# Differntially expressed genes
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
# MAplot
dataf=data.frame("m"=all.genes.con$AveExpr,"fc"=all.genes.con$logFC,"sig"=all.genes.con$adj.P.Val<0.05)
png(paste(cons[i],"_MAplot_limma_v2.png",sep=""))
plotMA(dataf,log="",main=cons[i],ylim=range(all.genes.con$logFC))
dev.off()
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),
sep="\t",col.names=NA)
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
limmaout=limmaout[,which(names(limmaout) %in% c("X","gene","logFC","P.Value"))]
limmaout$fc=2^limmaout$logFC
down_reg=limmaout$logFC<0
limmaout$fc[down_reg]=-1/limmaout$fc[down_reg]
limmaout=limmaout[,c("X","gene","fc","logFC","P.Value")]
colnames(limmaout)=c("ensid_gene","gene","fc","log2fc","pvalue")
limmaout$fdr=p.adjust(limmaout$pvalue,method='fdr',n=length(limmaout$pvalue))
limmaout$gsea_ranking_score=-log10(limmaout$pvalue)*sign(limmaout$log2fc)
write.table(limmaout,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
file.move(from = paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), to = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/")
knitr::opts_chunk$set(fig.width=14, fig.height=9)
#' Truncate string vector of ggplot axis label
#'
#' @param label    a ordered string vector
#' @param maxLen   max length of character (nchar) to show in label
#' @param maxWord  max count of words allowed to show in label
#' @param pattern  Word separater
#' @param dot      If true, three dots will added to truncated label
#'
#' @return a vector of truncated strings
#' @export
#'
#' @examples
short_label <- function(label, maxLen = 50, maxWord = 10, pattern = " ", dot = TRUE){
l <- strsplit(label, pattern)
short_label <- vector("character",length(l))
for (i in seq_along(l)){
truncated <- FALSE
s <- l[[i]]
if (length(s) > maxWord){
ll <- paste(s[1:maxWord], collapse = " ")
truncated <- TRUE
}
else{
ll <- paste(s, collapse = " ")
}
if (nchar(ll) > maxLen){
ll <- substr(ll, 1, maxLen)
truncated <- TRUE
}
if (dot & truncated) ll <- paste(ll, "...",sep = " ")
short_label[[i]] <- ll
}
attr(short_label, "pos") <- attr(label,"pos")
return(short_label)
}
suppressMessages(library(dplyr))
suppressMessages(library(RColorBrewer))
suppressMessages(library(pheatmap))
suppressMessages(library(clusterProfiler))
suppressMessages(library(argparse))
suppressMessages(library(org.Hs.eg.db))
suppressMessages(library(org.Mm.eg.db))
suppressMessages(library(ReactomePA))
suppressMessages(library(ggplot2))
suppressMessages(library(EnhancedVolcano))
suppressMessages(library(ggfortify))
suppressMessages(library(ggrepel))
suppressMessages(library(VennDiagram))
suppressMessages(library(biomaRt))
suppressMessages(library(enrichplot))
suppressMessages(library(gridExtra))
suppressMessages(library(gplots))
setwd("~/Desktop/active_projects/ccbr1016-Surajit-Sinha/pipeliner_limma/DEG/")
geneinfo = read.table("~/Desktop/active_projects/ccbrFiles/geneinfo.bed")
geneinfo$V5 = gsub('\\..*','', geneinfo$V5)
my_files <- list.files(path="~/Desktop/active_projects/ccbr1016-Surajit-Sinha/pipeliner_limma/DEG/input_files")
my_degs <- list()
for (i in my_files){
my_degs[[i]] <- read.table(i,header = TRUE,sep='\t')
my_degs[[i]]$ensid_gene <- gsub('\\..*','', my_degs[[i]]$ensid_gene)
}
names(my_degs) <- stringr::str_replace(my_files, pattern = "_all_genes.txt", replacement = "") %>%
stringr::str_replace(pattern = "limma_DEG_", replacement = "")
my_degs
my_files
0/10
10/0
0/0
1/0
0/1
0/0
BiocManager::valid()
BiocManager::valid()$too_new
112 packages out-of-date
BiocManager::valid()$out_of_date
setwd("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/")
load(file = "nanostring")
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.jpeg", res=150)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
suppressMessages(library(Biobase))
suppressMessages(library(NanoStringDiff))
suppressMessages(library(enrichplot))
suppressMessages(library(dplyr))
suppressMessages(library(RColorBrewer))
suppressMessages(library(pheatmap))
suppressMessages(library(clusterProfiler))
suppressMessages(library(argparse))
suppressMessages(library(org.Hs.eg.db))
suppressMessages(library(org.Mm.eg.db))
suppressMessages(library(ReactomePA))
suppressMessages(library(ggplot2))
suppressMessages(library(EnhancedVolcano))
suppressMessages(library(ggfortify))
suppressMessages(library(ggrepel))
suppressMessages(library(VennDiagram))
suppressMessages(library(biomaRt))
suppressMessages(library(enrichplot))
suppressMessages(library(gridExtra))
suppressMessages(library(gplots))
suppressMessages(library(stringr))
suppressMessages(library(dplyr))
suppressMessages(library(reshape2))
suppressMessages(library(Glimma))
suppressMessages(library(ggpubr))
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.jpeg", res=150)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
dev.off()
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.png", res=150)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
dev.off()
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.png",width=800, height=600, res=150)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
dev.off()
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.png",width=800, height=600, res=300)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
dev.off()
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.png",width=1200, height=1000, res=300)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
dev.off()
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.png",width=1300, height=1200, res=300)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
dev.off()
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.png",width=1600, height=1400, res=300)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
dev.off()
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.png",width=900, height=800, res=200)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
dev.off()
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.png",width=1000, height=900, res=200)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
dev.off()
png(filename = "~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.png",width=1100, height=1000, res=200)
#pdf("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts.pdf")
ggplot(long_Y_nph, aes(x=sample, y=normalized_Counts, fill=cytopenia)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ylim(0, 300)
dev.off()
png("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/normalizedCounts_PCA.png",width=1100, height=1000, res=200)
pca_plot(Y_nph)
dev.off()
png("~/Desktop/active_projects/ccbr1022-nanostring/Analysis/Results/housekeepingGenes.png",width=1100, height=1000, res=200)
ggarrange(PlotHouse(ABCF1),PlotHouse(G6PD),PlotHouse(NRDE2),PlotHouse(OAZ1),PlotHouse(POLR2A),
PlotHouse(SDHA),PlotHouse(STK11IP),PlotHouse(TBC1D10B),PlotHouse(TBP),PlotHouse(UBB),
nrow = 5, ncol = 2)
dev.off()
